// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Challenge.proto

package challenge

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateSkillRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSkillRequest) Reset()         { *m = CreateSkillRequest{} }
func (m *CreateSkillRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSkillRequest) ProtoMessage()    {}
func (*CreateSkillRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d13823e0ab8b4620, []int{0}
}

func (m *CreateSkillRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSkillRequest.Unmarshal(m, b)
}
func (m *CreateSkillRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSkillRequest.Marshal(b, m, deterministic)
}
func (m *CreateSkillRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSkillRequest.Merge(m, src)
}
func (m *CreateSkillRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSkillRequest.Size(m)
}
func (m *CreateSkillRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSkillRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSkillRequest proto.InternalMessageInfo

func (m *CreateSkillRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateSkillResponse struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSkillResponse) Reset()         { *m = CreateSkillResponse{} }
func (m *CreateSkillResponse) String() string { return proto.CompactTextString(m) }
func (*CreateSkillResponse) ProtoMessage()    {}
func (*CreateSkillResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d13823e0ab8b4620, []int{1}
}

func (m *CreateSkillResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSkillResponse.Unmarshal(m, b)
}
func (m *CreateSkillResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSkillResponse.Marshal(b, m, deterministic)
}
func (m *CreateSkillResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSkillResponse.Merge(m, src)
}
func (m *CreateSkillResponse) XXX_Size() int {
	return xxx_messageInfo_CreateSkillResponse.Size(m)
}
func (m *CreateSkillResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSkillResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSkillResponse proto.InternalMessageInfo

func (m *CreateSkillResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CreateSkillResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateSkillRequest)(nil), "challenge.CreateSkillRequest")
	proto.RegisterType((*CreateSkillResponse)(nil), "challenge.CreateSkillResponse")
}

func init() { proto.RegisterFile("Challenge.proto", fileDescriptor_d13823e0ab8b4620) }

var fileDescriptor_d13823e0ab8b4620 = []byte{
	// 191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x77, 0xce, 0x48, 0xcc,
	0xc9, 0x49, 0xcd, 0x4b, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4c, 0x86, 0x09,
	0x48, 0xc9, 0xa4, 0xe7, 0xe7, 0xa7, 0xe7, 0xa4, 0xea, 0x27, 0x16, 0x64, 0xea, 0x27, 0xe6, 0xe5,
	0xe5, 0x97, 0x24, 0x96, 0x64, 0xe6, 0xe7, 0x15, 0x43, 0x14, 0x2a, 0x69, 0x70, 0x09, 0x39, 0x17,
	0xa5, 0x26, 0x96, 0xa4, 0x06, 0x67, 0x67, 0xe6, 0xe4, 0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97,
	0x08, 0x09, 0x71, 0xb1, 0xe4, 0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81,
	0xd9, 0x4a, 0x96, 0x5c, 0xc2, 0x28, 0x2a, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0xf8, 0xb8,
	0x98, 0x32, 0x53, 0xc0, 0x0a, 0x59, 0x83, 0x98, 0x32, 0x53, 0xe0, 0x5a, 0x99, 0x10, 0x5a, 0x8d,
	0x72, 0xb8, 0x38, 0xe1, 0x0e, 0x14, 0x8a, 0xe7, 0xe2, 0x46, 0x32, 0x47, 0x48, 0x56, 0x0f, 0xee,
	0x54, 0x3d, 0x4c, 0x97, 0x48, 0xc9, 0xe1, 0x92, 0x86, 0x58, 0xaf, 0x24, 0xd8, 0x74, 0xf9, 0xc9,
	0x64, 0x26, 0x6e, 0x25, 0x4e, 0xfd, 0x32, 0x43, 0xfd, 0x62, 0x90, 0x54, 0x12, 0x1b, 0xd8, 0x67,
	0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0xba, 0x1d, 0xec, 0x15, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChallengeClient is the client API for Challenge service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChallengeClient interface {
	CreateSkill(ctx context.Context, in *CreateSkillRequest, opts ...grpc.CallOption) (*CreateSkillResponse, error)
}

type challengeClient struct {
	cc *grpc.ClientConn
}

func NewChallengeClient(cc *grpc.ClientConn) ChallengeClient {
	return &challengeClient{cc}
}

func (c *challengeClient) CreateSkill(ctx context.Context, in *CreateSkillRequest, opts ...grpc.CallOption) (*CreateSkillResponse, error) {
	out := new(CreateSkillResponse)
	err := c.cc.Invoke(ctx, "/challenge.Challenge/CreateSkill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChallengeServer is the server API for Challenge service.
type ChallengeServer interface {
	CreateSkill(context.Context, *CreateSkillRequest) (*CreateSkillResponse, error)
}

func RegisterChallengeServer(s *grpc.Server, srv ChallengeServer) {
	s.RegisterService(&_Challenge_serviceDesc, srv)
}

func _Challenge_CreateSkill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSkillRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChallengeServer).CreateSkill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/challenge.Challenge/CreateSkill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChallengeServer).CreateSkill(ctx, req.(*CreateSkillRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Challenge_serviceDesc = grpc.ServiceDesc{
	ServiceName: "challenge.Challenge",
	HandlerType: (*ChallengeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSkill",
			Handler:    _Challenge_CreateSkill_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "Challenge.proto",
}
